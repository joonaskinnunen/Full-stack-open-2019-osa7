{"ast":null,"code":"import _toConsumableArray from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport blogService from '.././services/blogs';\nexport var initializeBlogs = function initializeBlogs() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var blogs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return blogService.getAll();\n\n              case 2:\n                blogs = _context.sent;\n                dispatch({\n                  type: 'INIT_BLOGS',\n                  blogs: blogs\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addBlog = function addBlog(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var addedBlog;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                addedBlog = blogService.create(blog);\n                dispatch({\n                  type: 'addBlog',\n                  addedBlog: addedBlog\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar blogReducer = function blogReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'addBlog':\n      return [].concat(_toConsumableArray(state), [action.addedBlog]);\n\n    case 'INIT_BLOGS':\n      return [].concat(_toConsumableArray(state), [action.blogs]);\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","initializeBlogs","dispatch","getAll","blogs","type","addBlog","blog","addedBlog","create","blogReducer","state","action"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeF,WAAW,CAACG,MAAZ,EADf;;AAAA;AACCC,gBAAAA,KADD;AAELF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAE,YADC;AAEPD,kBAAAA,KAAK,EAALA;AAFO,iBAAD,CAAR;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,CARI;AAUP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAML,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACGM,gBAAAA,SADH,GACeR,WAAW,CAACS,MAAZ,CAAmBF,IAAnB,CADf;AAEHL,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAE,SADD;AAELG,kBAAAA,SAAS,EAATA;AAFK,iBAAD,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,CARM;;AAUP,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACxC,UAAQA,MAAM,CAACP,IAAf;AACI,SAAK,SAAL;AACI,0CAAWM,KAAX,IAAkBC,MAAM,CAACJ,SAAzB;;AACJ,SAAK,YAAL;AACI,0CAAWG,KAAX,IAAkBC,MAAM,CAACR,KAAzB;;AACJ;AAAS,aAAOO,KAAP;AALb;AAOH,CARD;;AAUA,eAAeD,WAAf","sourcesContent":["import blogService from '.././services/blogs'\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n      const blogs = await blogService.getAll()\n      dispatch({\n        type: 'INIT_BLOGS',\n        blogs\n      })\n    }\n  }\n\nexport const addBlog = (blog) => {\n    return async dispatch => {\n        const addedBlog = blogService.create(blog)\n        dispatch({\n            type: 'addBlog',\n            addedBlog\n        })\n    }\n}\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'addBlog':\n            return [...state, action.addedBlog]\n        case 'INIT_BLOGS':\n            return [...state, action.blogs]\n        default: return state\n    }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}