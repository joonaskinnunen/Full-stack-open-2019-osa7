{"ast":null,"code":"import _toConsumableArray from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport blogService from '.././services/blogs';\nexport var initializeBlogs = function initializeBlogs() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var blogs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return blogService.getAll();\n\n              case 2:\n                blogs = _context.sent;\n                dispatch({\n                  type: 'INIT_BLOGS',\n                  blogs: blogs\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var likeBlog = function likeBlog(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var likedBlog, updatedBlog;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                likedBlog = _objectSpread({}, blog, {\n                  likes: blog.likes + 1\n                });\n                _context2.next = 3;\n                return blogService.update(likedBlog);\n\n              case 3:\n                updatedBlog = _context2.sent;\n                dispatch({\n                  type: 'LIKE_BLOG',\n                  updatedBlog: updatedBlog\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addBlog = function addBlog(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var addedBlog;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return blogService.create(blog);\n\n              case 2:\n                addedBlog = _context3.sent;\n                dispatch({\n                  type: 'ADD_BLOG',\n                  addedBlog: addedBlog\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteBlog = function deleteBlog(blog) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return blogService.remove(blog);\n\n              case 2:\n                dispatch({\n                  type: 'DELETE_BLOG',\n                  blog: blog\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar blogReducer = function blogReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case 'ADD_BLOG':\n      return [].concat(_toConsumableArray(state), [action.addedBlog]);\n\n    case 'LIKE_BLOG':\n      return state.map(function (b) {\n        return b.id === action.updatedBlog.id ? action.updatedBlog : b;\n      });\n\n    case 'INIT_BLOGS':\n      return action.blogs;\n\n    case 'DELETE_BLOG':\n      return state.filter(function (b) {\n        return b.id !== action.deletedBlog.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/src/reducers/blogReducer.js"],"names":["blogService","initializeBlogs","dispatch","getAll","blogs","type","likeBlog","blog","likedBlog","likes","update","updatedBlog","addBlog","create","addedBlog","deleteBlog","remove","blogReducer","state","action","console","log","map","b","id","filter","deletedBlog"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBF,WAAW,CAACG,MAAZ,EADjB;;AAAA;AACGC,gBAAAA,KADH;AAEHF,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAE,YADD;AAELD,kBAAAA,KAAK,EAALA;AAFK,iBAAD,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,CARM;AAUP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAML,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACGM,gBAAAA,SADH,qBACoBD,IADpB;AAC0BE,kBAAAA,KAAK,EAAEF,IAAI,CAACE,KAAL,GAAa;AAD9C;AAAA;AAAA,uBAEuBT,WAAW,CAACU,MAAZ,CAAmBF,SAAnB,CAFvB;;AAAA;AAEGG,gBAAAA,WAFH;AAGHT,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAE,WADD;AAELM,kBAAAA,WAAW,EAAXA;AAFK,iBAAD,CAAR;;AAHG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AASH,CAVM;AAYP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACL,IAAD,EAAU;AAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAML,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBF,WAAW,CAACa,MAAZ,CAAmBN,IAAnB,CADrB;;AAAA;AACGO,gBAAAA,SADH;AAEHZ,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAE,UADD;AAELS,kBAAAA,SAAS,EAATA;AAFK,iBAAD,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,CARM;AAUP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACR,IAAD,EAAU;AAChC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAML,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGF,WAAW,CAACgB,MAAZ,CAAmBT,IAAnB,CADH;;AAAA;AAEHL,gBAAAA,QAAQ,CAAC;AACLG,kBAAAA,IAAI,EAAE,aADD;AAELE,kBAAAA,IAAI,EAAJA;AAFK,iBAAD,CAAR;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,CARM;;AAUP,IAAMU,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACd,IAAf;AACI,SAAK,UAAL;AACI,0CAAWa,KAAX,IAAkBC,MAAM,CAACL,SAAzB;;AACJ,SAAK,WAAL;AACI,aAAOI,KAAK,CAACI,GAAN,CAAU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACR,WAAP,CAAmBa,EAA5B,GAAiCL,MAAM,CAACR,WAAxC,GAAsDY,CAA1D;AAAA,OAAX,CAAP;;AACJ,SAAK,YAAL;AACI,aAAOJ,MAAM,CAACf,KAAd;;AACJ,SAAK,aAAL;AACI,aAAOc,KAAK,CAACO,MAAN,CAAa,UAAAF,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACO,WAAP,CAAmBF,EAAhC;AAAA,OAAd,CAAP;;AACJ;AAAS,aAAON,KAAP;AATb;AAWH,CAbD;;AAeA,eAAeD,WAAf","sourcesContent":["import blogService from '.././services/blogs'\n\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll()\n        dispatch({\n            type: 'INIT_BLOGS',\n            blogs\n        })\n    }\n}\n\nexport const likeBlog = (blog) => {\n    return async dispatch => {\n        const likedBlog = { ...blog, likes: blog.likes + 1 }\n        const updatedBlog = await blogService.update(likedBlog)\n        dispatch({\n            type: 'LIKE_BLOG',\n            updatedBlog\n        })\n\n    }\n}\n\nexport const addBlog = (blog) => {\n    return async dispatch => {\n        const addedBlog = await blogService.create(blog)\n        dispatch({\n            type: 'ADD_BLOG',\n            addedBlog\n        })\n    }\n}\n\nexport const deleteBlog = (blog) => {\n    return async dispatch => {\n        await blogService.remove(blog)\n        dispatch({\n            type: 'DELETE_BLOG',\n            blog\n        })\n    }\n}\n\nconst blogReducer = (state = [], action) => {\n    console.log(action)\n    switch (action.type) {\n        case 'ADD_BLOG':\n            return [...state, action.addedBlog]\n        case 'LIKE_BLOG':\n            return state.map(b => b.id === action.updatedBlog.id ? action.updatedBlog : b)\n        case 'INIT_BLOGS':\n            return action.blogs\n        case 'DELETE_BLOG':\n            return state.filter(b => b.id !== action.deletedBlog.id)\n        default: return state\n    }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}