{"ast":null,"code":"import _regeneratorRuntime from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar baseUrl = '/api/blogs/';\n\nvar getAll = function getAll() {\n  var request = axios.get(baseUrl + 'comments/');\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nvar create =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(newObject) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"\".concat(baseUrl).concat(newObject.blogId, \"/comments/\");\n            console.log(url);\n            _context.next = 4;\n            return axios.post(url, newObject);\n\n          case 4:\n            response = _context.sent;\n            console.log(response.data);\n            return _context.abrupt(\"return\", response.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function create(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getAll: getAll,\n  create: create\n};","map":{"version":3,"sources":["/Users/joonaskinnunen/Projects/Full-stack-open-2019-osa7/bloglist-frontend/src/services/comments.js"],"names":["axios","baseUrl","getAll","request","get","then","response","data","create","newObject","url","blogId","console","log","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,aAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,MAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAO,GAAG,WAApB,CAAhB;AACA,SAAOE,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACH,CAHD;;AAKA,IAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,GADK,aACIT,OADJ,SACcQ,SAAS,CAACE,MADxB;AAEXC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAFW;AAAA,mBAGYV,KAAK,CAACc,IAAN,CAAWJ,GAAX,EAAgBD,SAAhB,CAHZ;;AAAA;AAGLH,YAAAA,QAHK;AAIXM,YAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,IAArB;AAJW,6CAKJD,QAAQ,CAACC,IALL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAQA,eAAe;AAAEN,EAAAA,MAAM,EAANA,MAAF;AAAUM,EAAAA,MAAM,EAANA;AAAV,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs/'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl + 'comments/')\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const url = `${baseUrl}${newObject.blogId}/comments/`\n    console.log(url)\n    const response = await axios.post(url, newObject)\n    console.log(response.data)\n    return response.data\n  }\n\nexport default { getAll, create }"]},"metadata":{},"sourceType":"module"}